name: Test Refactored System

# Workflow to test the refactored marble race system
# Runs a quick simulation to verify all components work together

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode to run'
        required: false
        default: 'python -u src/main.py --rng-mode random --marbles 3 --output --headless --no-discord'
        type: choice
        options:
          - 'python -u src/main.py --rng-mode random --marbles 3 --output --headless --no-discord'
          - 'python -u src/main.py --rng-mode random --marbles 3 --canon --output --headless --no-discord'
          - 'python -u src/main.py --rng-mode random --marbles 3 --output --headless'

jobs:
  test-refactor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test imports
        run: |
          python -c "from src.integrations import DiscordIntegration; print('✓ Discord integration import works')"
          python -c "from src.results import ResultsManager; print('✓ Results manager import works')"
          python -c "from src.config import get_config; print('✓ Config system works')"

      - name: Test CLI help
        run: |
          python src/main.py --help

      - name: Run test simulation
        env:
          SDL_AUDIODRIVER: dummy
          DEV_REPORT_WEBHOOK_URL: ${{ secrets.DEV_REPORT_WEBHOOK_URL }}
        run: |
          ${{ github.event.inputs.test_mode }}

      - name: Verify results structure
        run: |
          echo "Checking results directory structure..."
          ls -la results/ || echo "No results directory found"
          ls -la results/canon/ || echo "No canon results found"
          ls -la results/misc/ || echo "No misc results found"
          echo "Checking output directory..."
          ls -la output/ || echo "No output directory found"

      - name: Test results manager
        run: |
          python -c "
          from src.results import ResultsManager
          rm = ResultsManager()
          latest = rm.get_latest_results()
          if latest:
              print('✓ Latest results found:', latest.get('timestamp', 'No timestamp'))
              print('✓ Winner character:', latest.get('winning_character_id', 'Unknown'))
          else:
              print('⚠ No results found (this might be expected for some test modes)')
          "
